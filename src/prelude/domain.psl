class SailGate::Prelude::Domain is
    const ASYNC_ID := 0;
    const CLOCK_ID := 1;
    const CLOCK_RESET_ID := 2;
    const CLOCK_RESET_ENABLE_ID := 3;
exports
    func Has_Clock(D : Domain) -> Boolean is
        return D.Level >= CLOCK_ID;
    end func Has_Clock

    func Has_Reset(D : Domain) -> Boolean is
        return D.Level >= CLOCK_RESET_ID;
    end func Has_Reset

    func Has_Enable(D : Domain) -> Boolean is
        return D.Level >= CLOCK_RESET_ID;
    end func Has_Enable

    func Clock(Name : Univ_Enumeration) -> Domain is
        return (Name => Name, Level => CLOCK_ID);
    end func Clock

    func Clock_Reset(Name : Univ_Enumeration) -> Domain is
        return (Name => Name, Level => CLOCK_RESET_ID);
    end func Clock_Reset

    func Clock_Reset_Enable(Name : Univ_Enumeration) -> Domain is
        return (Name => Name, Level => CLOCK_RESET_ENABLE_ID);
    end func Clock_Reset_Enable

    op "=?"(L, R : Domain) -> Ordering is
        if L is null or else R is null then
            return (if L is null and then R is null then #equal else #unordered);
        end if

        if L.Name == R.Name then
            {*"Clock domain name conflict"* L.Level == R.Level}
            return #equal;
        else
            return #unordered;
        end if
    end op "=?"

    func Rising(D : Domain) -> Boolean is
        return #true;
    end func Rising

    func Falling(D : Domain) -> Boolean is
        return #true;
    end func Falling
end class SailGate::Prelude::Domain
