/// Base scalar type
abstract interface SailGate::Prelude::Scalar_Type<D is Async<>>
    extends SailGate::Prelude::Rtl_Type<D> is
end interface SailGate::Prelude::Scalar_Type

/// Base logical unit. Represents a wire signal. This can be 0, 1, unknown,
/// high-impedance, or don't care. Each value corresponds to a YOSYS bit value
interface SailGate::Prelude::Logic<D is Async<>>
        extends SailGate::Prelude::Scalar_Type<D> is
    type Logic_Val is Enum<[ #false, #true, #x, #z, #dont_care ]>;
    const Value : Logic_Val;

    op "from_univ"(Univ : Univ_Integer { Univ in 0..1 }) -> Logic;
    op "from_univ"(S : Univ_Character {Util::Is_Logic_Char(S)}) -> Logic;
    op "from_univ"(Univ : Univ_Enumeration)
        {Univ in Logic_Val::Range()} -> Logic;
    op "to_univ"(L : Logic) -> Univ_Enumeration;

    op "not"(L : Logic) -> Logic;
    op "and"(Left, R : Logic) -> Logic;
    op "or"(Left, R : Logic) -> Logic;
    op "xor"(Left, R : Logic) -> Logic;
    op "=?"(L, R : Logic) -> Ordering;
end interface SailGate::Prelude::Logic
