import PSC::Reflection::*;
import SailGate::IR;

/// Utility functions for navigating reflection envrionment
interface SailGate::Sema::Util<> is
    /// Gets the base type for a type descriptor. Returns self if
    /// the provided type has no parent.
    func Base_Type(Desc : Type_Descriptor) -> Type_Descriptor;

    /// Gets full name for decl
    func Get_Decl_Name(D : Decl) -> Univ_String;

    /// Extracts base type name from type with parameters
    /// E.g. A<B> -> A
    func Base_Name(Name : Univ_String) -> Univ_String;

    /// Gets first decl of kind in region
    func First_In_Region(R : Region; Kind : Decl::Decl_Kind) -> optional Decl;

    /// Creates IR type from RTL type descriptor. Returns null for
    /// incorrect types
    func Type_To_Rtl(Type : Type_Descriptor) -> optional IR::Full_Type;

    /// Finds leftmost source location for a tree node
    func Find_Tree_Source(T : Tree) -> optional Source_Position;

    /// Gets call operation. Checks call tree for chosen interp
    func Get_Call_Operation(T : Tree) -> optional Decl;
end interface SailGate::Sema::Util
