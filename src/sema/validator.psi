import SailGate::IR::*;
import SailGate::Sema::*;
import PSC::Reflection;

interface SailGate::Sema::Sema_Error<> is
    type Sema_Error_Kind is Enum<[#no_entity, #invalid_field_type,
        #mutable_field, #invalid_inst, #ref_field_type,
        #invalid_run_return, #invalid_anno, #non_const_val,
        #field_init_val, #field_non_vec_align]>;
    const Kind : Sema_Error_Kind;
    const Source : optional Reflection::Source_Position;
    func Dump(E : Sema_Error);
end interface SailGate::Sema::Sema_Error

interface SailGate::Sema::Validator<> is
    type Entity_Map is Map<Univ_String, Entity>;
    var Entities : Entity_Map;

    func Create() -> Validator;
    func Check(var V : Validator; Ex : Extractor) -> optional Sema_Error;
    func Dump(V : Validator);
end interface SailGate::Sema::Validator
