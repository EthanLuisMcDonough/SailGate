/// Miscellaneous helper modules/functions used throughout the program
interface SailGate::Util<> is
    func Starts_With(Str : Univ_String; Prefix : Univ_String) -> Boolean;

    func Index_Of(Str : Univ_String; C : Univ_Character;
        Start : Univ_Integer := 1) -> optional Univ_Integer;

    func Enum_As_Str(U : Univ_Enumeration) -> Univ_String;

    /// Strips quotes from a quoted string or character
    /// E.g. "\"test\"" -> "test" and "'c'" -> "c"
    func Strip_Quotes(S : Univ_String {|S| >= 2}) -> Univ_String;

    /// Integer to bit string
    func To_Binary_String(U : Univ_Integer;
        Len : Univ_Integer := 1 {Len > 0}) -> Univ_String;

    type Either_Kind is Enum<[#left, #right]>;
    interface Either<L is Assignable<>; R is Assignable<>> is
        const Kind : Either_Kind;

        func Left(Val : L) -> Either;
        func Right(Val : R) -> Either;

        func Is_Left(E : Either) -> Boolean;
        func Is_Right(E : Either) -> Boolean;

        func Get_Left(E : Either) -> optional L;
        func Get_Right(E : Either) -> optional R;
        func Unwrap_Left(E : Either) -> L;
        func Unwrap_Right(E : Either) -> R;
    end interface Either

    interface Result<T is Assignable<>; E is Assignable<>> is
        func Ok(Val : T) -> Result;
        func Err(Val : E) -> Result;

        func Is_Ok(R : Result) -> Boolean;
        func Is_Err(R : Result) -> Boolean;
        op "to_bool"(R : Result) -> Boolean is Is_Ok;

        func Ok(R : Result) -> optional T;
        func Err(R : Result) -> optional E;

        func Unwrap(R : Result) -> T;
        func Unwrap_Err(R : Result) -> E;
    end interface Result
end interface SailGate::Util
